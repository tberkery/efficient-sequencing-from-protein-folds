Running command iteration 1
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    174.1 MiB    174.1 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.9 MiB    142.8 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    317.2 MiB    317.2 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    317.2 MiB      0.0 MiB           1       len_seq = len(seq)
    50    306.2 MiB    -11.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    308.5 MiB    308.5 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.9 MiB      8.4 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.9 MiB    316.9 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.9 MiB      0.0 MiB           1       len_seq = len(seq)
    50    316.9 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 2
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    173.8 MiB    173.8 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    317.3 MiB    143.5 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.9 MiB    316.9 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.9 MiB      0.0 MiB           1       len_seq = len(seq)
    50    306.1 MiB    -10.8 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    308.2 MiB    308.2 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.7 MiB      8.5 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    315.9 MiB    315.9 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    315.9 MiB      0.0 MiB           1       len_seq = len(seq)
    50    315.9 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 3
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    173.7 MiB    173.7 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    317.2 MiB    143.5 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.7 MiB    316.7 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.7 MiB      0.0 MiB           1       len_seq = len(seq)
    50    305.9 MiB    -10.8 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    308.1 MiB    308.1 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.4 MiB      8.3 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.4 MiB    316.4 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.4 MiB      0.0 MiB           1       len_seq = len(seq)
    50    316.4 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 4
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    173.8 MiB    173.8 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.5 MiB    142.7 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.1 MiB    316.1 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.1 MiB      0.0 MiB           1       len_seq = len(seq)
    50    305.2 MiB    -10.8 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    307.4 MiB    307.4 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    315.6 MiB      8.2 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    315.6 MiB    315.6 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    315.6 MiB      0.0 MiB           1       len_seq = len(seq)
    50    315.6 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 5
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    173.5 MiB    173.5 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    317.2 MiB    143.7 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.7 MiB    316.7 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.7 MiB      0.0 MiB           1       len_seq = len(seq)
    50    305.9 MiB    -10.8 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    308.1 MiB    308.1 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.6 MiB      8.5 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.6 MiB    316.6 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.6 MiB      0.0 MiB           1       len_seq = len(seq)
    50    316.6 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 6
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    173.6 MiB    173.6 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    317.3 MiB    143.7 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.9 MiB    316.9 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.9 MiB      0.0 MiB           1       len_seq = len(seq)
    50    306.1 MiB    -10.8 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    308.3 MiB    308.3 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.5 MiB      8.2 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.5 MiB    316.5 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.5 MiB      0.0 MiB           1       len_seq = len(seq)
    50    316.5 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 7
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    173.7 MiB    173.7 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.7 MiB    142.9 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    317.0 MiB    317.0 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    317.0 MiB      0.0 MiB           1       len_seq = len(seq)
    50    306.1 MiB    -10.9 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    308.3 MiB    308.3 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.3 MiB      8.0 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.3 MiB    316.3 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.3 MiB      0.0 MiB           1       len_seq = len(seq)
    50    316.3 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 8
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    174.3 MiB    174.3 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    317.7 MiB    143.4 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    317.2 MiB    317.2 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    317.2 MiB      0.0 MiB           1       len_seq = len(seq)
    50    306.4 MiB    -10.8 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    308.6 MiB    308.6 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.7 MiB      8.1 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.2 MiB    316.2 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.2 MiB      0.0 MiB           1       len_seq = len(seq)
    50    316.2 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 9
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    174.0 MiB    174.0 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    317.6 MiB    143.6 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    317.2 MiB    317.2 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    317.2 MiB      0.0 MiB           1       len_seq = len(seq)
    50    306.4 MiB    -10.8 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    308.6 MiB    308.6 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.7 MiB      8.2 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.8 MiB    316.8 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.8 MiB      0.0 MiB           1       len_seq = len(seq)
    50    316.8 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 10
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    173.9 MiB    173.9 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.8 MiB    142.9 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    317.1 MiB    317.1 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    317.1 MiB      0.0 MiB           1       len_seq = len(seq)
    50    306.1 MiB    -11.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    308.3 MiB    308.3 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.4 MiB      8.1 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.6 MiB    316.6 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.6 MiB      0.0 MiB           1       len_seq = len(seq)
    50    316.6 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 11
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    173.8 MiB    173.8 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    317.2 MiB    143.4 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.8 MiB    316.8 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.8 MiB      0.0 MiB           1       len_seq = len(seq)
    50    306.0 MiB    -10.8 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    308.2 MiB    308.2 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.4 MiB      8.2 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.4 MiB    316.4 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.4 MiB      0.0 MiB           1       len_seq = len(seq)
    50    316.4 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 12
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    173.9 MiB    173.9 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.9 MiB    143.0 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    317.2 MiB    317.2 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    317.2 MiB      0.0 MiB           1       len_seq = len(seq)
    50    306.2 MiB    -11.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    308.4 MiB    308.4 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.9 MiB      8.5 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.2 MiB    316.2 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.2 MiB      0.0 MiB           1       len_seq = len(seq)
    50    316.2 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 13
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    173.9 MiB    173.9 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    317.3 MiB    143.5 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.9 MiB    316.9 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.9 MiB      0.0 MiB           1       len_seq = len(seq)
    50    306.1 MiB    -10.8 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    308.3 MiB    308.3 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.3 MiB      8.0 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.3 MiB    316.3 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.3 MiB      0.0 MiB           1       len_seq = len(seq)
    50    316.3 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 14
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    174.5 MiB    174.5 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    317.8 MiB    143.3 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    317.3 MiB    317.3 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    317.3 MiB      0.0 MiB           1       len_seq = len(seq)
    50    306.5 MiB    -10.8 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    308.7 MiB    308.7 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    317.2 MiB      8.5 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    317.2 MiB    317.2 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    317.2 MiB      0.0 MiB           1       len_seq = len(seq)
    50    317.2 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 15
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    174.1 MiB    174.1 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.7 MiB    142.6 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    317.1 MiB    317.1 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    317.1 MiB      0.0 MiB           1       len_seq = len(seq)
    50    306.0 MiB    -11.1 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    308.3 MiB    308.3 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.8 MiB      8.5 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.8 MiB    316.8 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.8 MiB      0.0 MiB           1       len_seq = len(seq)
    50    316.8 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 16
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    174.1 MiB    174.1 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.2 MiB    142.1 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.4 MiB    316.4 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.4 MiB      0.0 MiB           1       len_seq = len(seq)
    50    305.4 MiB    -11.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    307.6 MiB    307.6 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    315.6 MiB      8.0 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    315.7 MiB    315.7 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    315.7 MiB      0.0 MiB           1       len_seq = len(seq)
    50    315.7 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 17
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    174.3 MiB    174.3 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    317.1 MiB    142.8 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    317.4 MiB    317.4 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    317.4 MiB      0.0 MiB           1       len_seq = len(seq)
    50    306.5 MiB    -11.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    308.7 MiB    308.7 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    317.0 MiB      8.3 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.2 MiB    316.2 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.2 MiB      0.0 MiB           1       len_seq = len(seq)
    50    316.2 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 18
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    173.7 MiB    173.7 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    315.8 MiB    142.2 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.1 MiB    316.1 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.1 MiB      0.0 MiB           1       len_seq = len(seq)
    50    305.1 MiB    -11.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    307.2 MiB    307.2 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    314.9 MiB      7.7 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    314.9 MiB    314.9 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    314.9 MiB      0.0 MiB           1       len_seq = len(seq)
    50    314.9 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 19
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    174.1 MiB    174.1 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.9 MiB    142.8 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    317.3 MiB    317.3 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    317.3 MiB      0.0 MiB           1       len_seq = len(seq)
    50    306.2 MiB    -11.1 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    308.4 MiB    308.4 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.7 MiB      8.3 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    315.8 MiB    315.8 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    315.8 MiB      0.0 MiB           1       len_seq = len(seq)
    50    315.8 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 20
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    173.7 MiB    173.7 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    315.8 MiB    142.1 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.0 MiB    316.0 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.0 MiB      0.0 MiB           1       len_seq = len(seq)
    50    305.0 MiB    -11.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    307.2 MiB    307.2 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    315.4 MiB      8.3 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    315.5 MiB    315.5 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    315.5 MiB      0.0 MiB           1       len_seq = len(seq)
    50    315.5 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 21
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    173.8 MiB    173.8 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.5 MiB    142.8 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    317.1 MiB    317.1 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    317.1 MiB      0.0 MiB           1       len_seq = len(seq)
    50    305.9 MiB    -11.2 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    308.1 MiB    308.1 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.5 MiB      8.4 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    315.9 MiB    315.9 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    315.9 MiB      0.0 MiB           1       len_seq = len(seq)
    50    315.9 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 22
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    173.7 MiB    173.7 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.5 MiB    142.8 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.8 MiB    316.8 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.8 MiB      0.0 MiB           1       len_seq = len(seq)
    50    305.8 MiB    -11.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    308.0 MiB    308.0 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.1 MiB      8.1 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.1 MiB    316.1 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.1 MiB      0.0 MiB           1       len_seq = len(seq)
    50    316.1 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 23
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    173.8 MiB    173.8 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.7 MiB    142.9 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    317.0 MiB    317.0 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    317.0 MiB      0.0 MiB           1       len_seq = len(seq)
    50    306.0 MiB    -11.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    308.3 MiB    308.3 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.6 MiB      8.3 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.6 MiB    316.6 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.6 MiB      0.0 MiB           1       len_seq = len(seq)
    50    316.6 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 24
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    174.0 MiB    174.0 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    315.9 MiB    142.0 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.3 MiB    316.3 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.3 MiB      0.0 MiB           1       len_seq = len(seq)
    50    305.2 MiB    -11.1 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    307.5 MiB    307.5 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    315.5 MiB      8.0 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    315.6 MiB    315.6 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    315.6 MiB      0.0 MiB           1       len_seq = len(seq)
    50    315.6 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 25
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    173.6 MiB    173.6 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.5 MiB    142.9 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.8 MiB    316.8 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.8 MiB      0.0 MiB           1       len_seq = len(seq)
    50    305.8 MiB    -11.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    308.0 MiB    308.0 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.3 MiB      8.3 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.4 MiB    316.4 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.4 MiB      0.0 MiB           1       len_seq = len(seq)
    50    316.4 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 26
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    174.0 MiB    174.0 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.9 MiB    142.9 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    317.2 MiB    317.2 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    317.2 MiB      0.0 MiB           1       len_seq = len(seq)
    50    306.4 MiB    -10.9 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    308.6 MiB    308.6 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.5 MiB      7.9 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.5 MiB    316.5 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.5 MiB      0.0 MiB           1       len_seq = len(seq)
    50    316.5 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 27
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    173.9 MiB    173.9 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    317.2 MiB    143.3 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    317.5 MiB    317.5 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    317.5 MiB      0.0 MiB           1       len_seq = len(seq)
    50    306.1 MiB    -11.4 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    308.3 MiB    308.3 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.5 MiB      8.2 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.5 MiB    316.5 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.5 MiB      0.0 MiB           1       len_seq = len(seq)
    50    316.5 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 28
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    173.6 MiB    173.6 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    315.9 MiB    142.3 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.3 MiB    316.3 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.3 MiB      0.0 MiB           1       len_seq = len(seq)
    50    305.1 MiB    -11.2 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    307.3 MiB    307.3 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    315.6 MiB      8.4 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    314.8 MiB    314.8 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    314.8 MiB      0.0 MiB           1       len_seq = len(seq)
    50    314.8 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 29
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    174.0 MiB    174.0 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.8 MiB    142.8 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    317.2 MiB    317.2 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    317.2 MiB      0.0 MiB           1       len_seq = len(seq)
    50    306.3 MiB    -10.9 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    308.2 MiB    308.2 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.4 MiB      8.2 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.0 MiB    316.0 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.0 MiB      0.0 MiB           1       len_seq = len(seq)
    50    316.0 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 30
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    174.1 MiB    174.1 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    317.2 MiB    143.1 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    317.6 MiB    317.6 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    317.6 MiB      0.0 MiB           1       len_seq = len(seq)
    50    306.0 MiB    -11.6 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    308.3 MiB    308.3 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.3 MiB      8.1 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.5 MiB    316.5 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.5 MiB      0.0 MiB           1       len_seq = len(seq)
    50    316.5 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 31
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    173.8 MiB    173.8 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.6 MiB    142.8 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    317.0 MiB    317.0 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    317.0 MiB      0.0 MiB           1       len_seq = len(seq)
    50    306.1 MiB    -10.9 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    308.3 MiB    308.3 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.5 MiB      8.2 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.5 MiB    316.5 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.5 MiB      0.0 MiB           1       len_seq = len(seq)
    50    316.5 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 32
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    174.2 MiB    174.2 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    317.0 MiB    142.8 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    317.3 MiB    317.3 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    317.3 MiB      0.0 MiB           1       len_seq = len(seq)
    50    306.3 MiB    -11.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    308.6 MiB    308.6 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    317.0 MiB      8.4 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    317.0 MiB    317.0 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    317.0 MiB      0.0 MiB           1       len_seq = len(seq)
    50    317.0 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 33
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    174.2 MiB    174.2 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.9 MiB    142.7 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    317.4 MiB    317.4 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    317.4 MiB      0.0 MiB           1       len_seq = len(seq)
    50    306.3 MiB    -11.1 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    308.5 MiB    308.5 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.6 MiB      8.1 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.6 MiB    316.6 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.6 MiB      0.0 MiB           1       len_seq = len(seq)
    50    316.6 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 34
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    174.2 MiB    174.2 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    317.2 MiB    142.9 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    317.5 MiB    317.5 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    317.5 MiB      0.0 MiB           1       len_seq = len(seq)
    50    306.5 MiB    -11.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    308.7 MiB    308.7 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.8 MiB      8.1 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    317.0 MiB    317.0 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    317.0 MiB      0.0 MiB           1       len_seq = len(seq)
    50    317.0 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 35
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    174.2 MiB    174.2 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    317.1 MiB    142.8 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    317.4 MiB    317.4 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    317.4 MiB      0.0 MiB           1       len_seq = len(seq)
    50    306.4 MiB    -11.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    308.6 MiB    308.6 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.9 MiB      8.3 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.0 MiB    316.0 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.0 MiB      0.0 MiB           1       len_seq = len(seq)
    50    316.0 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 36
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    173.8 MiB    173.8 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.7 MiB    142.8 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    317.1 MiB    317.1 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    317.1 MiB      0.0 MiB           1       len_seq = len(seq)
    50    306.0 MiB    -11.1 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    308.2 MiB    308.2 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.0 MiB      7.8 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.0 MiB    316.0 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.0 MiB      0.0 MiB           1       len_seq = len(seq)
    50    316.0 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 37
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    173.7 MiB    173.7 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.5 MiB    142.8 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.8 MiB    316.8 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.8 MiB      0.0 MiB           1       len_seq = len(seq)
    50    305.9 MiB    -11.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    308.1 MiB    308.1 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.4 MiB      8.3 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.5 MiB    316.5 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.5 MiB      0.0 MiB           1       len_seq = len(seq)
    50    316.5 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 38
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    174.0 MiB    174.0 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.8 MiB    142.8 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    317.1 MiB    317.1 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    317.1 MiB      0.0 MiB           1       len_seq = len(seq)
    50    306.3 MiB    -10.8 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    308.5 MiB    308.5 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.7 MiB      8.2 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.0 MiB    316.0 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.0 MiB      0.0 MiB           1       len_seq = len(seq)
    50    316.0 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 39
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    173.6 MiB    173.6 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.5 MiB    142.9 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    317.2 MiB    317.2 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    317.2 MiB      0.0 MiB           1       len_seq = len(seq)
    50    305.9 MiB    -11.3 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    308.1 MiB    308.1 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.4 MiB      8.3 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.5 MiB    316.5 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.5 MiB      0.0 MiB           1       len_seq = len(seq)
    50    316.5 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 40
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    174.1 MiB    174.1 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    317.0 MiB    142.9 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    317.3 MiB    317.3 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    317.3 MiB      0.0 MiB           1       len_seq = len(seq)
    50    306.4 MiB    -11.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    308.5 MiB    308.5 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.8 MiB      8.3 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.1 MiB    316.1 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.1 MiB      0.0 MiB           1       len_seq = len(seq)
    50    316.1 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 41
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    173.7 MiB    173.7 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    315.7 MiB    142.0 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.1 MiB    316.1 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.1 MiB      0.0 MiB           1       len_seq = len(seq)
    50    305.1 MiB    -11.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    307.2 MiB    307.2 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    315.6 MiB      8.3 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    314.9 MiB    314.9 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    314.9 MiB      0.0 MiB           1       len_seq = len(seq)
    50    314.9 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 42
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    173.9 MiB    173.9 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.6 MiB    142.7 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    317.0 MiB    317.0 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    317.0 MiB      0.0 MiB           1       len_seq = len(seq)
    50    305.9 MiB    -11.1 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    308.2 MiB    308.2 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.6 MiB      8.4 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.6 MiB    316.6 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.6 MiB      0.0 MiB           1       len_seq = len(seq)
    50    316.6 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 43
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    173.9 MiB    173.9 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.7 MiB    142.8 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    317.1 MiB    317.1 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    317.1 MiB      0.0 MiB           1       len_seq = len(seq)
    50    306.3 MiB    -10.8 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    308.2 MiB    308.2 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.4 MiB      8.3 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.4 MiB    316.4 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.4 MiB      0.0 MiB           1       len_seq = len(seq)
    50    316.4 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 44
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    174.0 MiB    174.0 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.9 MiB    142.9 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    317.2 MiB    317.2 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    317.2 MiB      0.0 MiB           1       len_seq = len(seq)
    50    306.2 MiB    -11.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    308.4 MiB    308.4 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.5 MiB      8.0 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.2 MiB    316.2 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.2 MiB      0.0 MiB           1       len_seq = len(seq)
    50    316.2 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 45
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    174.0 MiB    174.0 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.7 MiB    142.7 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    317.0 MiB    317.0 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    317.0 MiB      0.0 MiB           1       len_seq = len(seq)
    50    306.0 MiB    -11.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    308.3 MiB    308.3 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.3 MiB      8.1 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.3 MiB    316.3 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.3 MiB      0.0 MiB           1       len_seq = len(seq)
    50    316.3 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 46
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    174.2 MiB    174.2 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.8 MiB    142.6 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    317.1 MiB    317.1 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    317.1 MiB      0.0 MiB           1       len_seq = len(seq)
    50    306.2 MiB    -11.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    308.4 MiB    308.4 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.7 MiB      8.3 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.0 MiB    316.0 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.0 MiB      0.0 MiB           1       len_seq = len(seq)
    50    316.0 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 47
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    174.2 MiB    174.2 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.8 MiB    142.6 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    317.1 MiB    317.1 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    317.1 MiB      0.0 MiB           1       len_seq = len(seq)
    50    306.1 MiB    -11.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    308.3 MiB    308.3 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.7 MiB      8.4 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.8 MiB    316.8 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.8 MiB      0.0 MiB           1       len_seq = len(seq)
    50    316.8 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 48
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    174.1 MiB    174.1 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.8 MiB    142.7 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    317.2 MiB    317.2 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    317.2 MiB      0.0 MiB           1       len_seq = len(seq)
    50    306.1 MiB    -11.1 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    308.3 MiB    308.3 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.5 MiB      8.2 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.5 MiB    316.5 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.5 MiB      0.0 MiB           1       len_seq = len(seq)
    50    316.5 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 49
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    174.0 MiB    174.0 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.8 MiB    142.8 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    317.1 MiB    317.1 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    317.1 MiB      0.0 MiB           1       len_seq = len(seq)
    50    306.2 MiB    -11.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    308.4 MiB    308.4 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.4 MiB      8.0 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    316.5 MiB    316.5 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    316.5 MiB      0.0 MiB           1       len_seq = len(seq)
    50    316.5 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Running command iteration 50
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
MultinomialHMM has undergone major changes. The previous version was implementing a CategoricalHMM (a special case of MultinomialHMM). This new implementation follows the standard definition for a Multinomial distribution (e.g. as in https://en.wikipedia.org/wiki/Multinomial_distribution). See these issues for details:
https://github.com/hmmlearn/hmmlearn/issues/335
https://github.com/hmmlearn/hmmlearn/issues/340
Data structure:  BWT-HMM , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    173.9 MiB    173.9 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.6 MiB    142.7 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    317.1 MiB    317.1 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    317.1 MiB      0.0 MiB           1       len_seq = len(seq)
    50    305.9 MiB    -11.2 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)


Data structure:  BWT-HMM , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    43    308.1 MiB    308.1 MiB           1   @profile
    44                                         def bwt_hmm_with_space_annotation(seq):
    45    316.0 MiB      7.9 MiB           1       bwt_hmm(seq)


Data structure:  MLSE-Viterbi , Sample:  compressed_hypothetical_protein_test , Iteration  0
Filename: C:\Users\Tad\Documents\protein-fold-pipeline\benchmark\profile.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    47    315.5 MiB    315.5 MiB           1   @profile
    48                                         def make_proposals_mlse(seq, num_proposals=10, max_path_len=10, sep='_'):
    49    315.5 MiB      0.0 MiB           1       len_seq = len(seq)
    50    315.5 MiB      0.0 MiB           1       query_seq(seq, len_seq, num_proposals, max_path_len, sep=sep, threshold=0.01, verbose=False)
